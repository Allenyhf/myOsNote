{"root":{"data":{"id":"d0c979b74453","created":1581319827,"text":"操作系统之CPU","note":"# 应试要点：\n\n\n## 死锁：\n- 判断是否有死锁（结合图论中的环）\n- 安全状态安全序列的判断\n- 银行家算法"},"children":[{"data":{"id":"c0ib496p8n40","created":1581319890989,"text":"进程","layout_mind_offset":{"x":7,"y":0},"expandState":"expand"},"children":[{"data":{"id":"c0ibafrpn8qo","created":1581320375505,"text":"程序实例化"},"children":[]},{"data":{"id":"c0ib9kuj14w0","created":1581320308195,"text":"线程"},"children":[{"data":{"id":"c0ibare5pc00","created":1581320400807,"text":"共享数据"},"children":[]}]},{"data":{"id":"c0ibapo5dq0w","created":1581320397057,"text":"fork"},"children":[]}]},{"data":{"id":"c0ib7jg18y68","created":1581320148413,"text":"CPU调度","expandState":"expand"},"children":[{"data":{"id":"c0ib9qg9e2v4","created":1581320320393,"text":"调度算法","expandState":"collapse"},"children":[{"data":{"id":"c0ibb5nxsc1s","created":1581320431873,"text":"轮转法"},"children":[]},{"data":{"id":"c0ibbp8izj0g","created":1581320474477,"text":"先来先服务"},"children":[]},{"data":{"id":"c0ibbzdme58g","created":1581320496553,"text":"最短作业优先"},"children":[]},{"data":{"id":"c0ibbd335am8","created":1581320448026,"text":"优先级调度"},"children":[]},{"data":{"id":"c0ibbjpi251c","created":1581320462442,"text":"反馈队列"},"children":[]}]}]},{"data":{"id":"c0ib5yelz4zk","created":1581320024251,"text":"临界区问题"},"children":[{"data":{"id":"c0ibd3lhg8hs","created":1581320584099,"text":"原子化操作"},"children":[]}]},{"data":{"id":"c0ibfg90gum8","created":1581320768372,"text":"同步问题"},"children":[]},{"data":{"id":"c0ib6xse8av4","created":1581320101271,"text":"死锁","layout_mind_offset":{"x":794,"y":356},"expandState":"expand"},"children":[{"data":{"id":"c0ibfsidj20w","created":1581320795059,"text":"死锁的解决","expandState":"collapse"},"children":[{"data":{"id":"c0ibgquri51c","created":1581320869819,"text":"死锁预防","note":"## 破坏死锁产生的四个条件：\n### ~~互斥mutual exclusion~~\n- 共享访问\n- 虚拟化技术/spooling\n### ~~保持和等待hold and wait~~\n- 一次性申请，一次性分配\n### ~~不可抢占no~~\n- 剥夺等待资源的进程所持有的资源\n### ~~循环等待circular waiting~~\n- 给文件、设备等资源编号，进程需要递增式地申请，从而不会产生环\n"},"children":[]},{"data":{"id":"c0ibgbagpvy8","created":1581320835941,"text":"死锁避免","note":"## 安全序列与安全状态\n## 安全检测算法\n## 银行家算法"},"children":[]},{"data":{"id":"c0ibgusyls74","created":1581320878417,"text":"死锁检测和恢复","note":"## 死锁检测和恢复属于容错计算机\n## 死锁检测算法\n- 检测环O（n^2）\n- 安全检测算法\n## 死锁恢复策略\n- kill进程（abort）-代价最小化、可能饥饿\n\t- 运行时间\n    - 占用资源多少\n    - 优先级\n- 恢复到没有死锁的状态（rollback）\n- watchdog（常用）"},"children":[]},{"data":{"id":"c0ic3mhwxszk","created":1581322662711,"text":"鸵鸟算法","note":"UNIX、WINDOWS、LINUX"},"children":[]}]},{"data":{"id":"c0ibh12uu5fk","created":1581320892076,"text":"死锁产生的条件","expandState":"collapse"},"children":[{"data":{"id":"c0ibin4fvuv4","created":1581321018425,"text":"互斥"},"children":[]},{"data":{"id":"c0ibizaw4ohs","created":1581321044937,"text":"保持和等待"},"children":[]},{"data":{"id":"c0ibj5yro8w0","created":1581321059441,"text":"不可抢占"},"children":[]},{"data":{"id":"c0ibja5ehiio","created":1581321068549,"text":"循环等待"},"children":[]}]},{"data":{"id":"c0ibjojiqkg0","created":1581321099878,"text":"环与死锁","expandState":"collapse"},"children":[{"data":{"id":"c0ibk2me3klc","created":1581321130527,"text":"有环不一定有死锁"},"children":[]},{"data":{"id":"c0ibk7xbbqww","created":1581321142072,"text":"有环且等待的资源唯一，产生死锁"},"children":[]},{"data":{"id":"c0ibks6zgl4w","created":1581321186191,"text":"有死锁一定有环，无环一定无死锁"},"children":[]}]}]},{"data":{"id":"c0ibe6737u9s","created":1581320668123,"text":"CPU状态","layout_mind_offset":{"x":524,"y":-268}},"children":[{"data":{"id":"c0ibef5fu0w0","created":1581320687615,"text":"内核态"},"children":[]},{"data":{"id":"c0ibekb8txxc","created":1581320698850,"text":"用户态"},"children":[]}]}]},"template":"default","theme":"fresh-green","version":"1.4.43"}